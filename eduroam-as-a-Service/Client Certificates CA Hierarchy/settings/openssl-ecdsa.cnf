# eduroam-as-a-Service root CA and certificate CA generation script
#

####################################################################
[ ca ]
default_ca	= CA_default		# The default ca section

####################################################################
[ CA_default ]

dir		= ./ROOT-ECDSA		# Where everything is kept for the purposed of the Eduroam CA.all
certs		= $dir/certs		# Where the issued certs are kept
crl_dir		= $dir/crl		# Where the issued crl are kept
database	= $dir/index.txt	# database index file.
new_certs_dir	= $dir/newcerts		# default place for new certs.

certificate	= $dir/cacert.pem 	# The CA certificate
serial		= $dir/serial 		# The current serial number
#crl_extensions = crl_ext		# leve commented out for v1 CRLs
#crlnumber	= $dir/crlnumber	# the current crl number must be
					# commented out to leave a V1 CRL
crl		= $dir/crl.pem 		# The current CRL

x509_extensions	= usr_cert		# The extentions to add to the cert

# Comment out the following two lines for the "traditional"
# (and highly broken) format.
name_opt 	= ca_default		# Subject Name options
cert_opt 	= ca_default		# Certificate field options

default_days	= 365
default_crl_days= 365			# how long before next CRL
default_md	= sha512		# which md to use.
default_bits    = 4096
preserve	= no			# keep passed DN ordering

# A few difference way of specifying how similar the request should look
# For type CA, the listed attributes must be the same, and the optional
# and supplied fields are just that :-)
policy		= policy_match

# For the CA policy
[ policy_match ]
organizationName	= match
organizationalUnitName	= match
commonName		= supplied

####################################################################
[ req ]
default_bits		= 4096
default_keyfile 	= privkey.pem
distinguished_name	= req_distinguished_name
attributes		= req_attributes
x509_extensions	= v3_ca	# The extentions to add to the self signed cert

# This sets a mask for permitted string types. There are several options. 
# default: PrintableString, T61String, BMPString.
# pkix	 : PrintableString, BMPString.
# utf8only: only UTF8Strings.
# nombstr : PrintableString, T61String (no BMPStrings or UTF8Strings).
# MASK:XXXX a literal mask value.
# WARNING: current versions of Netscape crash on BMPStrings or UTF8Strings
# so use this option with caution!
# we use PrintableString+UTF8String mask so if pure ASCII texts are used
# the resulting certificates are compatible with Netscape
string_mask = MASK:0x2002

[ req_distinguished_name ]

0.domainComponent		= Outermost Domain Component
0.domainComponent_default	= org

1.domainComponent		= second-level Domain Component
1.domainComponent_default	= eduroam

0.organizationName		= Organization Name (eg, company)
0.organizationName_default	= eduroam

organizationalUnitName		= Organizational Unit Name (eg, section)
organizationalUnitName_default	= eduroam Managed IdP

commonName			= Common Name
commonName_default              = eduroam Managed IdP Client Auth Root CA G1
commonName_max			= 64

[ req_attributes ]

[ v3_ca ]

subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid:always
basicConstraints = critical,CA:true
keyUsage = critical, cRLSign, keyCertSign, digitalSignature 

[ v3_intermediate_ca ]
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid:always
basicConstraints = critical,CA:true
keyUsage = critical, cRLSign, keyCertSign, digitalSignature

# consider using distinct CRL/OCSP hostnames for production
# and/or multiple entries with a hostname each to allow for DNS-name redundancy

authorityInfoAccess = @ocsp_info

crlDistributionPoints=URI:http://ocsp.hosted.eduroam.org/rootca/crl.der

[ocsp_info]

caIssuers;URI.0         = http://ocsp.hosted.eduroam.org/ecdsa/user-root/cacert.crt
OCSP;URI.0              = http://ocsp.hosted.eduroam.org/ecdsa/user-root/ocsp

[ crl_ext ]

# CRL extensions.
# Only issuerAltName and authorityKeyIdentifier make any sense in a CRL.

# issuerAltName=issuer:copy
authorityKeyIdentifier=keyid:always,issuer:always

